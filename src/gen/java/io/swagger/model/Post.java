/*
 * AppyChat
 * This is a social media application server called AppyChat.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: archana.raj@truecommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.Comment;
import io.swagger.model.Reaction;
import io.swagger.model.Stats;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Post
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2020-11-07T12:35:50.314Z")
public class Post   {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("author")
  private String author = null;

  @JsonProperty("created")
  private Date created = null;

  @JsonProperty("text")
  private String text = null;

  @JsonProperty("multimedia")
  private List<String> multimedia = null;

  @JsonProperty("distribution")
  private List<String> distribution = null;

  @JsonProperty("stats")
  private List<Stats> stats = null;

  @JsonProperty("comments")
  private List<Comment> comments = null;

  @JsonProperty("reactions")
  private List<Reaction> reactions = null;

  public Post id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Unique ID
   * @return id
   **/
  @JsonProperty("id")
  @ApiModelProperty(value = "Unique ID")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Post author(String author) {
    this.author = author;
    return this;
  }

  /**
   * Author ID
   * @return author
   **/
  @JsonProperty("author")
  @ApiModelProperty(value = "Author ID")
  public String getAuthor() {
    return author;
  }

  public void setAuthor(String author) {
    this.author = author;
  }

  public Post created(Date created) {
    this.created = created;
    return this;
  }

  /**
   * Get created
   * @return created
   **/
  @JsonProperty("created")
  @ApiModelProperty(value = "")
  @Valid
  public Date getCreated() {
    return created;
  }

  public void setCreated(Date created) {
    this.created = created;
  }

  public Post text(String text) {
    this.text = text;
    return this;
  }

  /**
   * Appychat post text
   * @return text
   **/
  @JsonProperty("text")
  @ApiModelProperty(value = "Appychat post text")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public Post multimedia(List<String> multimedia) {
    this.multimedia = multimedia;
    return this;
  }

  public Post addMultimediaItem(String multimediaItem) {
    if (this.multimedia == null) {
      this.multimedia = new ArrayList<String>();
    }
    this.multimedia.add(multimediaItem);
    return this;
  }

  /**
   * Media links for photos and videos
   * @return multimedia
   **/
  @JsonProperty("multimedia")
  @ApiModelProperty(value = "Media links for photos and videos")
  public List<String> getMultimedia() {
    return multimedia;
  }

  public void setMultimedia(List<String> multimedia) {
    this.multimedia = multimedia;
  }

  public Post distribution(List<String> distribution) {
    this.distribution = distribution;
    return this;
  }

  public Post addDistributionItem(String distributionItem) {
    if (this.distribution == null) {
      this.distribution = new ArrayList<String>();
    }
    this.distribution.add(distributionItem);
    return this;
  }

  /**
   * List of recipients of the post. Comprising friends of the Author
   * @return distribution
   **/
  @JsonProperty("distribution")
  @ApiModelProperty(value = "List of recipients of the post. Comprising friends of the Author")
  public List<String> getDistribution() {
    return distribution;
  }

  public void setDistribution(List<String> distribution) {
    this.distribution = distribution;
  }

  public Post stats(List<Stats> stats) {
    this.stats = stats;
    return this;
  }

  public Post addStatsItem(Stats statsItem) {
    if (this.stats == null) {
      this.stats = new ArrayList<Stats>();
    }
    this.stats.add(statsItem);
    return this;
  }

  /**
   * Get stats
   * @return stats
   **/
  @JsonProperty("stats")
  @ApiModelProperty(value = "")
  @Valid
  public List<Stats> getStats() {
    return stats;
  }

  public void setStats(List<Stats> stats) {
    this.stats = stats;
  }

  public Post comments(List<Comment> comments) {
    this.comments = comments;
    return this;
  }

  public Post addCommentsItem(Comment commentsItem) {
    if (this.comments == null) {
      this.comments = new ArrayList<Comment>();
    }
    this.comments.add(commentsItem);
    return this;
  }

  /**
   * Get comments
   * @return comments
   **/
  @JsonProperty("comments")
  @ApiModelProperty(value = "")
  @Valid
  public List<Comment> getComments() {
    return comments;
  }

  public void setComments(List<Comment> comments) {
    this.comments = comments;
  }

  public Post reactions(List<Reaction> reactions) {
    this.reactions = reactions;
    return this;
  }

  public Post addReactionsItem(Reaction reactionsItem) {
    if (this.reactions == null) {
      this.reactions = new ArrayList<Reaction>();
    }
    this.reactions.add(reactionsItem);
    return this;
  }

  /**
   * Get reactions
   * @return reactions
   **/
  @JsonProperty("reactions")
  @ApiModelProperty(value = "")
  @Valid
  public List<Reaction> getReactions() {
    return reactions;
  }

  public void setReactions(List<Reaction> reactions) {
    this.reactions = reactions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Post post = (Post) o;
    return Objects.equals(this.id, post.id) &&
        Objects.equals(this.author, post.author) &&
        Objects.equals(this.created, post.created) &&
        Objects.equals(this.text, post.text) &&
        Objects.equals(this.multimedia, post.multimedia) &&
        Objects.equals(this.distribution, post.distribution) &&
        Objects.equals(this.stats, post.stats) &&
        Objects.equals(this.comments, post.comments) &&
        Objects.equals(this.reactions, post.reactions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, author, created, text, multimedia, distribution, stats, comments, reactions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Post {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    multimedia: ").append(toIndentedString(multimedia)).append("\n");
    sb.append("    distribution: ").append(toIndentedString(distribution)).append("\n");
    sb.append("    stats: ").append(toIndentedString(stats)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    reactions: ").append(toIndentedString(reactions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

