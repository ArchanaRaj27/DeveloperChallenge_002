/*
 * AppyChat
 * This is a social media application server called AppyChat.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: archana.raj@truecommerce.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.Reaction;
import io.swagger.model.ReactionCount;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Reply
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2020-11-07T12:35:50.314Z")
public class Reply   {
  @JsonProperty("created")
  private Date created = null;

  @JsonProperty("author")
  private Long author = null;

  @JsonProperty("text")
  private String text = null;

  @JsonProperty("gifLink")
  private String gifLink = null;

  @JsonProperty("reactionCounts")
  private List<ReactionCount> reactionCounts = null;

  @JsonProperty("reactions")
  private List<Reaction> reactions = null;

  public Reply created(Date created) {
    this.created = created;
    return this;
  }

  /**
   * date-time comment added
   * @return created
   **/
  @JsonProperty("created")
  @ApiModelProperty(value = "date-time comment added")
  @Valid
  public Date getCreated() {
    return created;
  }

  public void setCreated(Date created) {
    this.created = created;
  }

  public Reply author(Long author) {
    this.author = author;
    return this;
  }

  /**
   * Order Status
   * @return author
   **/
  @JsonProperty("author")
  @ApiModelProperty(value = "Order Status")
  public Long getAuthor() {
    return author;
  }

  public void setAuthor(Long author) {
    this.author = author;
  }

  public Reply text(String text) {
    this.text = text;
    return this;
  }

  /**
   * Comment text
   * @return text
   **/
  @JsonProperty("text")
  @ApiModelProperty(value = "Comment text")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public Reply gifLink(String gifLink) {
    this.gifLink = gifLink;
    return this;
  }

  /**
   * Links to the GIFs
   * @return gifLink
   **/
  @JsonProperty("gifLink")
  @ApiModelProperty(value = "Links to the GIFs")
  public String getGifLink() {
    return gifLink;
  }

  public void setGifLink(String gifLink) {
    this.gifLink = gifLink;
  }

  public Reply reactionCounts(List<ReactionCount> reactionCounts) {
    this.reactionCounts = reactionCounts;
    return this;
  }

  public Reply addReactionCountsItem(ReactionCount reactionCountsItem) {
    if (this.reactionCounts == null) {
      this.reactionCounts = new ArrayList<ReactionCount>();
    }
    this.reactionCounts.add(reactionCountsItem);
    return this;
  }

  /**
   * Get reactionCounts
   * @return reactionCounts
   **/
  @JsonProperty("reactionCounts")
  @ApiModelProperty(value = "")
  @Valid
  public List<ReactionCount> getReactionCounts() {
    return reactionCounts;
  }

  public void setReactionCounts(List<ReactionCount> reactionCounts) {
    this.reactionCounts = reactionCounts;
  }

  public Reply reactions(List<Reaction> reactions) {
    this.reactions = reactions;
    return this;
  }

  public Reply addReactionsItem(Reaction reactionsItem) {
    if (this.reactions == null) {
      this.reactions = new ArrayList<Reaction>();
    }
    this.reactions.add(reactionsItem);
    return this;
  }

  /**
   * Get reactions
   * @return reactions
   **/
  @JsonProperty("reactions")
  @ApiModelProperty(value = "")
  @Valid
  public List<Reaction> getReactions() {
    return reactions;
  }

  public void setReactions(List<Reaction> reactions) {
    this.reactions = reactions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Reply reply = (Reply) o;
    return Objects.equals(this.created, reply.created) &&
        Objects.equals(this.author, reply.author) &&
        Objects.equals(this.text, reply.text) &&
        Objects.equals(this.gifLink, reply.gifLink) &&
        Objects.equals(this.reactionCounts, reply.reactionCounts) &&
        Objects.equals(this.reactions, reply.reactions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, author, text, gifLink, reactionCounts, reactions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Reply {\n");
    
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    gifLink: ").append(toIndentedString(gifLink)).append("\n");
    sb.append("    reactionCounts: ").append(toIndentedString(reactionCounts)).append("\n");
    sb.append("    reactions: ").append(toIndentedString(reactions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

